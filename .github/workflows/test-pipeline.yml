name: Python Test Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      sql-server:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          ACCEPT_EULA: "Y"
          SA_PASSWORD: "YourStrong!Passw0rd"
        ports:
          - 1433:1433
        options: >-
          --health-cmd "opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P 'YourStrong!Passw0rd' -Q 'SELECT 1'" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Install Playwright and dependencies
      - name: Install Playwright browsers
        run: |
          python -m playwright install

      # Step 5: Run Playwright Tests
      - name: Run Playwright tests
        run: |
          pytest tests/playwright_tests/

      # Step 6: Run SQL Server validation tests
      - name: Run SQL Server validation tests
        env:
          DATABASE_URL: "mssql+pyodbc://sa:YourStrong!Passw0rd@localhost,1433/AdventureWorks2022?driver=ODBC+Driver+17+for+SQL+Server"
        run: |
          pytest tests/sql_tests/

      # Step 7: Upload test results (optional)
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: test-results/
